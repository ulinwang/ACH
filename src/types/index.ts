// ACH 竞争性假设分析工具 - 类型定义

// 基础类型
export type Priority = 'high' | 'medium' | 'low';
export type EvidenceType = 'supporting' | 'opposing' | 'neutral';
export type MilestoneType = 'warning' | 'decision' | 'monitoring';
export type MilestoneSignificance = 'high' | 'medium' | 'low';

// 假设接口
export interface Hypothesis {
    id: string;
    text: string;
    confidence: number; // 0-100
    priority: Priority;
    reasoning: string;
    createdAt: Date;
    updatedAt: Date;
}

// 证据接口
export interface Evidence {
    id: string;
    text: string;
    type: EvidenceType;
    source: string;
    weight: number; // 0-100
    reliability: number; // 0-100
    notes: string;
    createdAt: Date;
    updatedAt: Date;
}

// 矩阵单元格接口
export interface MatrixCell {
    hypothesisId: string;
    evidenceId: string;
    score: number; // -2 to +2
    notes?: string;
    updatedAt: Date;
}

// 假设得分接口
export interface HypothesisScore {
    hypothesisId: string;
    raw: number;
    weighted: number;
    average: number;
    count: number;
    rank: number;
}

// 结论接口
export interface Conclusion {
    id: string;
    hypothesisId: string;
    text: string;
    confidence: number;
    reasoning: string;
    falsificationAttempts: string[];
    createdAt: Date;
    updatedAt: Date;
}

// 敏感性分析接口
export interface SensitivityAnalysis {
    id: string;
    evidenceId: string;
    impact: number;
    isKeyEvidence: boolean;
    robustnessScore: number;
    scenarios: ScenarioAnalysis[];
    createdAt: Date;
    updatedAt: Date;
}

// 场景分析接口
export interface ScenarioAnalysis {
    id: string;
    name: string;
    description: string;
    weightChange: number;
    reliabilityChange: number;
    resultingScores: HypothesisScore[];
}

// 里程碑接口
export interface Milestone {
    id: string;
    title: string;
    description: string;
    type: MilestoneType;
    significance: MilestoneSignificance;
    timeframe: string;
    indicators: string[];
    hypotheses: string[]; // hypothesis IDs
    isCompleted: boolean;
    createdAt: Date;
    updatedAt: Date;
}

// 报告章节接口
export interface ReportSection {
    id: string;
    title: string;
    content: string;
    isAutoGenerated: boolean;
    lastUpdated: Date;
}

// 报告数据接口
export interface ReportData {
    id: string;
    title: string;
    sections: {
        summary: ReportSection;
        hypotheses: ReportSection;
        evidence: ReportSection;
        analysis: ReportSection;
        conclusions: ReportSection;
        recommendations: ReportSection;
    };
    createdAt: Date;
    updatedAt: Date;
}

// 优化建议接口
export interface OptimizationSuggestion {
    id: string;
    type: 'warning' | 'info' | 'suggestion';
    title: string;
    description: string;
    targetType: 'hypothesis' | 'evidence' | 'matrix';
    targetIds: string[];
    action: string;
    priority: Priority;
}

// 诊断价值接口
export interface DiagnosticValue {
    evidenceId: string;
    value: number;
    variance: number;
    discriminationPower: number;
}

// 主要分析数据接口
export interface AnalysisData {
    id: string;
    title: string;
    topic: string;
    hypotheses: Hypothesis[];
    evidence: Evidence[];
    matrix: Record<string, number>; // key: "hypothesisId-evidenceId", value: score
    conclusions: Conclusion[];
    sensitivity: SensitivityAnalysis[];
    milestones: Milestone[];
    report: ReportData;
    metadata: {
        version: string;
        createdAt: Date;
        updatedAt: Date;
        author?: string;
        description?: string;
    };
}

// UI 状态接口
export interface UIState {
    currentStep: number;
    isLoading: boolean;
    error: string | null;
    activeDialog: string | null;
    selectedItems: string[];
    filters: {
        evidenceType?: EvidenceType;
        priority?: Priority;
        searchTerm?: string;
    };
    sortBy: {
        field: string;
        direction: 'asc' | 'desc';
    };
}

// 步骤配置接口
export interface StepConfig {
    id: number;
    title: string;
    description: string;
    icon: string;
    color: string;
    isCompleted: boolean;
    isActive: boolean;
    isDisabled: boolean;
}

// 导出选项接口
export interface ExportOptions {
    format: 'json' | 'markdown' | 'pdf' | 'csv';
    includeMetadata: boolean;
    includeMatrix: boolean;
    includeCharts: boolean;
    sections?: string[];
}

// 导入选项接口
export interface ImportOptions {
    format: 'json' | 'csv';
    preserveIds: boolean;
    mergeStrategy: 'overwrite' | 'merge' | 'skip';
}

// 操作历史接口
export interface OperationHistory {
    id: string;
    action: string;
    target: string;
    targetId: string;
    previousValue: any;
    newValue: any;
    timestamp: Date;
    user?: string;
}

// 统计信息接口
export interface Statistics {
    totalHypotheses: number;
    totalEvidence: number;
    completedMatrixCells: number;
    matrixCompletionRate: number;
    evidenceByType: Record<EvidenceType, number>;
    hypothesesByPriority: Record<Priority, number>;
    averageConfidence: number;
    keyEvidenceCount: number;
}

// 验证结果接口
export interface ValidationResult {
    isValid: boolean;
    errors: string[];
    warnings: string[];
}

// 主题配置接口
export interface ThemeConfig {
    mode: 'light' | 'dark' | 'auto';
    primaryColor: string;
    accentColor: string;
    fontSize: 'small' | 'medium' | 'large';
    animations: boolean;
}

// 用户偏好接口
export interface UserPreferences {
    theme: ThemeConfig;
    language: string;
    autoSave: boolean;
    saveInterval: number; // minutes
    showTooltips: boolean;
    compactMode: boolean;
    keyboardShortcuts: boolean;
}

// 应用配置接口
export interface AppConfig {
    version: string;
    buildDate: Date;
    features: {
        exportPDF: boolean;
        advancedAnalytics: boolean;
        collaborativeMode: boolean;
        cloudSync: boolean;
    };
    limits: {
        maxHypotheses: number;
        maxEvidence: number;
        maxProjects: number;
    };
}

// 错误接口
export interface AppError {
    code: string;
    message: string;
    details?: any;
    timestamp: Date;
    stack?: string;
}

// API 响应接口
export interface ApiResponse<T = any> {
    success: boolean;
    data?: T;
    error?: AppError;
    timestamp: Date;
}

// 事件接口
export interface AppEvent {
    type: string;
    payload: any;
    timestamp: Date;
    source: string;
}

// 类型工具函数
export type DeepPartial<T> = {
    [P in keyof T]?: T[P] extends object ? DeepPartial<T[P]> : T[P];
};

export type RequiredFields<T, K extends keyof T> = T & Required<Pick<T, K>>;

export type OptionalFields<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>;

// 类型守卫
export function isHypothesis(obj: any): obj is Hypothesis {
    return obj && typeof obj.id === 'string' && typeof obj.text === 'string';
}

export function isEvidence(obj: any): obj is Evidence {
    return obj && typeof obj.id === 'string' && typeof obj.text === 'string' && ['supporting', 'opposing', 'neutral'].includes(obj.type);
}

export function isAnalysisData(obj: any): obj is AnalysisData {
    return obj && typeof obj.id === 'string' && Array.isArray(obj.hypotheses) && Array.isArray(obj.evidence);
}

// 常量
export const MATRIX_SCORES = [-2, -1, 0, 1, 2] as const;
export const EVIDENCE_TYPES: EvidenceType[] = ['supporting', 'opposing', 'neutral'];
export const PRIORITIES: Priority[] = ['high', 'medium', 'low'];
export const MILESTONE_TYPES: MilestoneType[] = ['warning', 'decision', 'monitoring'];

// 默认值
export const DEFAULT_HYPOTHESIS: Partial<Hypothesis> = {
    confidence: 50,
    priority: 'medium',
    reasoning: '',
};

export const DEFAULT_EVIDENCE: Partial<Evidence> = {
    type: 'supporting',
    weight: 50,
    reliability: 50,
    notes: '',
    source: '',
};

export const DEFAULT_ANALYSIS_DATA: AnalysisData = {
    id: 'default',
    title: '新建分析',
    topic: '',
    hypotheses: [],
    evidence: [],
    matrix: {},
    conclusions: [],
    sensitivity: [],
    milestones: [],
    report: {
        id: 'default-report',
        title: '分析报告',
        sections: {
            summary: {
                id: 'summary',
                title: '摘要',
                content: '',
                isAutoGenerated: false,
                lastUpdated: new Date(),
            },
            hypotheses: {
                id: 'hypotheses',
                title: '假设分析',
                content: '',
                isAutoGenerated: false,
                lastUpdated: new Date(),
            },
            evidence: {
                id: 'evidence',
                title: '证据评估',
                content: '',
                isAutoGenerated: false,
                lastUpdated: new Date(),
            },
            analysis: {
                id: 'analysis',
                title: '矩阵分析',
                content: '',
                isAutoGenerated: false,
                lastUpdated: new Date(),
            },
            conclusions: {
                id: 'conclusions',
                title: '结论',
                content: '',
                isAutoGenerated: false,
                lastUpdated: new Date(),
            },
            recommendations: {
                id: 'recommendations',
                title: '建议',
                content: '',
                isAutoGenerated: false,
                lastUpdated: new Date(),
            },
        },
        createdAt: new Date(),
        updatedAt: new Date(),
    },
    metadata: {
        version: '1.0.0',
        createdAt: new Date(),
        updatedAt: new Date(),
    },
};

export const DEFAULT_UI_STATE: UIState = {
    currentStep: 0,
    isLoading: false,
    error: null,
    activeDialog: null,
    selectedItems: [],
    filters: {},
    sortBy: {
        field: 'createdAt',
        direction: 'desc',
    },
};

export const DEFAULT_USER_PREFERENCES: UserPreferences = {
    theme: {
        mode: 'dark',
        primaryColor: '#3b82f6',
        accentColor: '#8b5cf6',
        fontSize: 'medium',
        animations: true,
    },
    language: 'zh-CN',
    autoSave: true,
    saveInterval: 5,
    showTooltips: true,
    compactMode: false,
    keyboardShortcuts: true,
}; 